esphome:
  name: lifxtest
  platform: ESP8266
  board: d1_mini
  includes:
    - lifx-emulation.h
  platformio_options:
    lib_deps: ESPAsyncUDP

wifi:
  networks:
  - ssid: "YOURINFORMATIONHERE"
    password: !secret wifi
  fast_connect: TRUE
  
# Enable logging
logger:
  level: WARN
  esp8266_store_log_strings_in_flash: False
  
# Enable Home Assistant API
api:
  password: !secret ota
  reboot_timeout: 0s

ota:
  password: !secret ota

#this is for my bench test light, your pins may vary
output:
  - platform: esp8266_pwm
    pin: D1
    id: P1
    #frequency: 4000 Hz
    #inverted: True
    min_power: 0
    max_power: 1

  - platform: esp8266_pwm
    pin: D2
    id: P2
    #frequency: 4000 Hz
    #inverted: True
    min_power: 0
    max_power: 1

  - platform: esp8266_pwm
    pin: D5
    id: P5
    #frequency: 4000 Hz
    #inverted: True
    min_power: 0
    max_power: 1

  - platform: esp8266_pwm
    pin: D6
    id: P6
    #frequency: 4000 Hz
    #inverted: True
    min_power: 0
    max_power: 1

  - platform: esp8266_pwm
    pin: D7
    id: P7
    #frequency: 4000 Hz
    #inverted: True
    min_power: 0
    max_power: 1

light:
  - platform: rgb
    id: color_led
    name: "color_led"
    red: P7
    green: P6
    blue: P5
    
  - platform: cwww
    id: white_led
    name: "white_led"
    cold_white: P1
    warm_white: P2
    cold_white_color_temperature: 6500 K
    warm_white_color_temperature: 2700 K

# need UTC time to respond to packets correctly.  Expects name of ha_time in code.
time:
  - platform: sntp
    id: ha_time

# Required component for lifx support
custom_component:
- lambda: |-
    byte mac[6];
    WiFi.macAddress(mac);
    auto lifxUdpSupport = new lifxUdp();
    lifxUdpSupport->beginUDP(mac, (char *)App.get_name().c_str());
    return {lifxUdpSupport};
